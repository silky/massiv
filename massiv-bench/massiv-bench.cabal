name:                massiv-bench
version:             0.1.0.0
synopsis:            Benchmarks for Massiv library.
description:         Multi-dimensional Arrays with automatic fusion and parallel computation.
homepage:            https://github.com/lehins/massiv
license:             BSD3
license-file:        LICENSE
author:              Alexey Kuleshevich
maintainer:          lehins@yandex.ru
copyright:           2017 Alexey Kuleshevich
category:            Data, Data Structures
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

library
  hs-source-dirs:      src
  exposed-modules:     Bench
                     , Bench.Common
                     , Bench.Massiv
                     , Bench.Massiv.Array
                     , Bench.Repa
                     , Bench.Vector
  build-depends:       base            >= 4.8 && < 5
                     , deepseq
                     , data-default
                     , massiv
                     , repa
                     , repa-algorithms
                     , vector
  default-language:    Haskell2010
  ghc-options:         -Wall


benchmark construct-seq
  type:                exitcode-stdio-1.0
  hs-source-dirs:      bench
  main-is:             ConstructSeq.hs
  ghc-options:         -threaded -O2 -rtsopts -with-rtsopts=-N7
  build-depends:       base
                     , criterion
                     , deepseq
                     , massiv
                     , massiv-bench
                     , vector
                     , repa
                     , repa-algorithms
  default-language:    Haskell2010

benchmark fuse-seq
  type:                exitcode-stdio-1.0
  hs-source-dirs:      bench
  main-is:             FuseSeq.hs
  ghc-options:         -threaded -O2
  build-depends:       base
                     , criterion
                     , deepseq
                     , massiv-bench
                     , vector
                     , repa
                     , repa-algorithms
  default-language:    Haskell2010

benchmark fold-seq
  type:                exitcode-stdio-1.0
  hs-source-dirs:      bench
  main-is:             FoldSeq.hs
  ghc-options:         -threaded -O2 -rtsopts -with-rtsopts=-N7
  build-depends:       base
                     , criterion
                     , massiv
                     , massiv-bench
                     , vector
                     , repa
  default-language:    Haskell2010

benchmark convolve-seq
  type:                exitcode-stdio-1.0
  hs-source-dirs:      bench
  main-is:             ConvolveSeq.hs
  --ghc-options:         -threaded -rtsopts -with-rtsopts=-N7 -Odph -fno-liberate-case -funfolding-use-threshold1000 -funfolding-keeness-factor1000 -fllvm -optlo-O3
  ghc-options:         -threaded -O2 -rtsopts -with-rtsopts=-N7
  build-depends:       base
                     , criterion
                     , deepseq
                     , massiv-bench
                     , vector
                     , repa
                     , repa-algorithms
  default-language:    Haskell2010


benchmark stencil
  type:                exitcode-stdio-1.0
  hs-source-dirs:      bench
  main-is:             Stencil.hs
  ghc-options:         -threaded -O2 -rtsopts -with-rtsopts=-N7
  build-depends:       base
                     , criterion
                     , deepseq
                     , massiv-bench
  default-language:    Haskell2010

benchmark maximum
  type:                exitcode-stdio-1.0
  hs-source-dirs:      bench
  main-is:             Maximum.hs
  ghc-options:         -threaded -O2 -rtsopts -with-rtsopts=-N7
  build-depends:       base
                     , bytestring
                     , criterion
                     , massiv
                     , massiv-bench
                     , vector
  default-language:    Haskell2010

-- benchmark loops
--   type:                exitcode-stdio-1.0
--   hs-source-dirs:      bench
--   main-is:             Loops.hs
--   ghc-options:         -threaded -O2
--   build-depends:       base
--                      , criterion
--                      , massiv
--                      , vector
--                      , repa
--   default-language:    Haskell2010

benchmark index
  type:                exitcode-stdio-1.0
  hs-source-dirs:      bench
  main-is:             Index.hs
  ghc-options:         -threaded -O2
  build-depends:       base
                     , criterion
                     , massiv
                     , repa
  default-language:    Haskell2010

-- benchmark compute-par
--   type:                exitcode-stdio-1.0
--   hs-source-dirs:      bench
--   main-is:             ComputePar.hs
--   other-modules:       CommonMassiv
--                      , CommonRepa
--   ghc-options:         -threaded -rtsopts -with-rtsopts=-N6 -Odph -fno-liberate-case -funfolding-use-threshold1000 -funfolding-keeness-factor1000 -fllvm -optlo-O3
--   build-depends:       base
--                      , criterion
--                      , massiv
--                      , repa
--                      , repa-algorithms
--                      , vector
--   default-language:    Haskell2010

-- benchmark filtering
--   type:                exitcode-stdio-1.0
--   hs-source-dirs:      bench
--   main-is:             Filtering.hs
--   other-modules:       Compute
--   ghc-options:         -threaded -O2
--   build-depends:       base
--                      , criterion
--                      , massiv
--                      , vector
--                      , repa
--   default-language:    Haskell2010

-- benchmark convolution-seq
--   type:                exitcode-stdio-1.0
--   hs-source-dirs:      bench
--   main-is:             Convolution.hs
--   other-modules:       CommonMassiv
--                      , CommonRepa
--   ghc-options:         -threaded -O2

--   build-depends:       base
--                      , criterion
--                      , massiv
--                      , primitive
--                      , repa
--                      , repa-algorithms
--                      , vector
--   default-language:    Haskell2010

-- benchmark convolution-par
--   type:                exitcode-stdio-1.0
--   hs-source-dirs:      bench
--   main-is:             ConvolutionPar.hs
--   other-modules:       CommonMassiv
--                      , CommonRepa
--   ghc-options:         -threaded -rtsopts -with-rtsopts=-N6 -O2
--                        ---Odph -fno-liberate-case -funfolding-use-threshold1000 -funfolding-keeness-factor1000 -fllvm -optlo-O3

--   build-depends:       base
--                      , criterion
--                      , deepseq
--                      , massiv
--                      , repa
--                      , repa-algorithms
--                      , vector
--                      , primitive
--   default-language:    Haskell2010

executable massiv
  hs-source-dirs:      app
                     , bench
  main-is:             Main.hs
  build-depends:       base
                     , massiv
                     -- , time
                     -- , repa
                     -- , repa-algorithms
  default-language:    Haskell2010
  --ghc-options:         -O2 -fllvm
  --ghc-options:         -threaded -O2
  --ghc-options:         -threaded -rtsopts -with-rtsopts=-N7 -O2
  --ghc-options:         -Wall -O2 -threaded -prof -fprof-auto
  ghc-options:         -threaded -O2 -ddump-simpl -dsuppress-idinfo -dsuppress-coercions -dsuppress-type-applications -dsuppress-uniques -dsuppress-module-prefixes

source-repository head
  type:     git
  location: https://github.com/lehins/massiv
